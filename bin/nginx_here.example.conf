daemon off;

## START SETTINGS PULLED FROM cluster_config
# number of nginx workers
worker_processes  6;
## END SETTINGS FROM cluster_config

events {
  worker_connections  1024;
}

http {
  include /Users/ryan/bin/nginx/conf/mime.types;
    
  # Assuming path has been set to a Rails application
  access_log            log/nginx.access.log;
  
  
  ## START SETTINGS PULLED FROM cluster_config
  # total number of app instances across all vhosts default=6
  passenger_max_pool_size 5;
  # set a default type for the rare situation that
  # nothing matches from the mimie-type include
  default_type  application/octet-stream;

  # configure log format
  log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status  $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  # These are good default values.
  tcp_nopush        on;
  tcp_nodelay       off;
  # output compression saves bandwidth 
  gzip            on;
  gzip_vary       on; 
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_types      text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  
  ## END SETTINGS FROM cluster_config
  
  
  
  client_body_temp_path tmp/nginx.client_body_temp;
  fastcgi_temp_path     tmp/nginx.client_body_temp;
  proxy_temp_path       tmp/nginx.proxy_temp;
  
  passenger_root put_path_to_passenger_root_here;
  passenger_ruby put_path_to_passenger_ruby_here;
  
  server {
    listen      3000;
    server_name localhost;
    
    
    ## START SETTINGS PULLED FROM cluster_config
    # Set the max size for file uploads to 50Mb
    client_max_body_size 50M;
    
    # Ryan's epic caching of static assets, even those embedded in CSS
    rewrite ^/\d+(/(images|stylesheets|javascripts).*$) $1;

    # Nginx does not add any freshness cache headers for static files
    # with Ryan's epic caching we can cache forever and a day.
    location ~* \.(js|css|jpg|jpeg|gif|png|ico)$ {
      if (-f $request_filename) {
        expires      max;
        break;
      }
    }
    ## END SETTINGS FROM cluster_config


    
    root              public;
    passenger_enabled on;
    #rails_env         development;
    rack_env          development;
  }
}
